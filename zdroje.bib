% s√∫bor: zdroje.bib

% zdroj na webe 
@misc{Agile,
author = "Jim Highsmith, For the Agile Alliance",
title = "History: agile manifesto",
year = "2001",
howpublished = "\url{https://agilemanifesto.org/history.html}"
}

@misc{Agile_Values,
Author = "Kent Beck
	Mike Beedle
	Arie van Bennekum
	Alistair Cockburn
	Ward Cunningham
	Martin Fowler
	James Grenning
	Jim Highsmith
	Andrew Hunt
	Ron Jeffries
	Jon Kern
	Brian Marick
	Robert C. Martin
	Steve Mellor
	Ken Schwaber
	Jeff Sutherland
	Dave Thomas",
year ="2001",
title = "Manifesto for agile Software development",
howpublished ="\url{https://agilemanifesto.org/}"
}



@misc{Agile_principles,
author = {Kent Beck
	Mike Beedle
	Arie van Bennekum
	Alistair Cockburn
	Ward Cunningham
	Martin Fowler
	James Grenning
	Jim Highsmith
	Andrew Hunt
	Ron Jeffries
	Jon Kern
	Brian Marick
	Robert C. Martin
	Steve Mellor
	Ken Schwaber
	Jeff Sutherland
	Dave Thomas},
year ="2001",
title ={Principles behind the Agile Manifesto},
howpublished = {\url{https://agilemanifesto.org/principles.html}}
}

@ARTICLE{1008537,
  author={English, A.},
  journal={IT Professional}, 
  title={Extreme programming, it's worth a look}, 
  year={2002},
  volume={4},
  number={3},
  pages={48-50},
  doi={10.1109/MITP.2002.1008537}}

@Inbook{Sherrell2013,
author="Sherrell, Linda",
editor="Runehov, Anne L. C.
and Oviedo, Lluis",
title="Waterfall Model",
bookTitle="Encyclopedia of Sciences and Religions",
year="2013",
publisher="Springer Netherlands",
address="Dordrecht",
pages="2343--2344",
isbn="978-1-4020-8265-8",
doi="10.1007/978-1-4020-8265-8_200285",
url="https://doi.org/10.1007/978-1-4020-8265-8_200285"
}

@book{10.5555/1076267,
author = {Beck, Kent and Andres, Cynthia},
title = {Extreme Programming Explained: Embrace Change (2nd Edition)},
year = {2004},
isbn = {0321278658},
publisher = {Addison-Wesley Professional},
abstract = {Whether you have a small team that is already closely aligned with your customers
or a large team in a gigantic or multinational organization, you will find in these
pages a wealth of ideas to challenge, inspire, and encourage you and your team members
to substantially improve your software development.You will discover how to: Involve
the whole team-XP style Increase technical collaboration through pair programming
and continuous integration Reduce defects through developer testing Align business
and technical decisions through weekly and quarterly planning Improve teamwork by
setting up an informative, shared workspaceYou will also find many other concrete
ideas for improvement, all based on a philosophy that emphasizes simultaneously increasing
the humanity and effectiveness of software development.Every team can improve. Every
team can begin improving today. Improvement is possible-beyond what we can currently
imagine. Extreme Programming Explained, Second Edition, offers ideas to fuel your
improvement for years to come.}
}